{"class":["workspace"],"payload":{"stacks":{"stack-1":{"class":["stack"],"payload":["list(\n  list(\n    dataset = list(\n      value = \"airquality\",\n      choices = c(\n        \"airquality\", \"anscombe\", \"attenu\", \"attitude\", \"beaver1\", \"beaver2\", \"BOD\",\n        \"cars\", \"ChickWeight\", \"chickwts\", \"CO2\", \"DNase\", \"esoph\", \"faithful\",\n        \"Formaldehyde\", \"freeny\", \"Indometh\", \"infert\", \"InsectSprays\", \"iris\",\n        \"LifeCycleSavings\", \"Loblolly\", \"longley\", \"morley\", \"mtcars\", \"npk\",\n        \"Orange\", \"OrchardSprays\", \"PlantGrowth\", \"pressure\", \"Puromycin\", \"quakes\",\n        \"randu\", \"rock\", \"sleep\", \"stackloss\", \"swiss\", \"Theoph\", \"ToothGrowth\",\n        \"trees\", \"USArrests\", \"USJudgeRatings\", \"warpbreaks\", \"women\"\n      ),\n      multiple = FALSE\n    ) |>\n      structure(\n        type = \"literal\",\n        class = c(\"select_field\", \"field\"),\n        title = \"\",\n        descr = \"\",\n        status = \"active\",\n        exclude = FALSE\n      )\n  ) |>\n    structure(\n      name = \"jzqljhflnfrfegs\",\n      expr = quote(get(.(dataset), envir = as.environment(\"package:datasets\"))),\n      position = 1,\n      class = c(\"dataset_block\", \"data_block\", \"block\")\n    ),\n  list(\n    columns = list(\n      choices = (function(data) colnames(data)) |>\n        (`environment<-`)(new.env()) |>\n        structure(result = c(\"Ozone\", \"Solar.R\", \"Wind\", \"Temp\", \"Month\", \"Day\")),\n      multiple = TRUE,\n      value = \"Ozone\"\n    ) |>\n      structure(\n        type = \"literal\",\n        class = c(\"select_field\", \"field\"),\n        title = \"\",\n        descr = \"\",\n        status = \"active\",\n        exclude = FALSE\n      ),\n    values = list(\n      value = list(Ozone = \"41\"),\n      sub_fields = (function(data, columns) {\n        determine_field <- function(x) {\n          switch(class(x),\n            factor = select_field,\n            numeric = range_field,\n            string_field\n          )\n        }\n        field_args <- function(x) {\n          switch(class(x),\n            factor = list(levels(x)[1L], choices = levels(x)),\n            numeric = list(range(x), min = min(x), max = max(x)),\n            list()\n          )\n        }\n        cols <- data[, columns, drop = FALSE]\n        ctor <- lapply(cols, determine_field)\n        args <- lapply(cols, field_args)\n        Map(do.call, ctor, args)\n      }) |>\n        (`environment<-`)(new.env()) |>\n        structure(\n          result = list(\n            Ozone = list(value = \"41\") |>\n              structure(\n                type = \"literal\",\n                class = c(\"string_field\", \"field\"),\n                title = \"\",\n                descr = \"\",\n                status = \"active\",\n                exclude = FALSE\n              )\n          )\n        )\n    ) |>\n      structure(\n        type = \"literal\",\n        class = c(\"list_field\", \"field\"),\n        title = \"\",\n        descr = \"\",\n        status = \"active\",\n        exclude = FALSE\n      ),\n    filter_func = list(\n      choices = c(\"==\", \"!=\", \"!startsWith\", \"startsWith\", \"grepl\", \">\", \"<\", \">=\", \"<=\"),\n      multiple = FALSE,\n      value = \"==\"\n    ) |>\n      structure(\n        type = \"literal\",\n        class = c(\"select_field\", \"field\"),\n        title = \"\",\n        descr = \"\",\n        status = \"active\",\n        exclude = FALSE\n      ),\n    expression = list(\n      value = (function(data, values, filter_func) {\n        filter_exp <- function(cls, col, val) {\n          if (is.null(val)) {\n            return(quote(TRUE))\n          }\n          switch(cls,\n            numeric = bquote(dplyr::between(.(column), ..(values)), list(column = as.name(col), values = val), splice = TRUE),\n            bquote(eval(call(.(filter_func), .(column), .(value))), list(column = as.name(col), value = val, filter_func = filter_func))\n          )\n        }\n        cols <- names(values)\n        Reduce(function(x, y) bquote(.(lhs) | .(rhs), list(lhs = x, rhs = y)), Map(filter_exp, chr_ply(data[, cols, drop = FALSE], class), cols, values))\n      }) |>\n        (`environment<-`)(new.env()) |>\n        structure(result = quote(eval(call(\"==\", Ozone, \"41\"))))\n    ) |>\n      structure(\n        type = \"literal\",\n        class = c(\"hidden_field\", \"field\"),\n        title = \"\",\n        descr = \"\",\n        status = \"active\",\n        exclude = FALSE\n      ),\n    submit = list(\n      value = 1L |>\n        structure(class = c(\"shinyActionButtonValue\", \"integer\"))\n    ) |>\n      structure(\n        type = \"literal\",\n        class = c(\"submit_field\", \"field\"),\n        title = \"\",\n        descr = \"\",\n        status = \"active\",\n        exclude = FALSE\n      )\n  ) |>\n    structure(\n      name = \"ljruptchavuqoqi\",\n      expr = quote(dplyr::filter(.(expression))),\n      position = 1L,\n      class = c(\"filter_block\", \"transform_block\", \"submit_block\", \"block\")\n    )\n) |>\n  structure(title = \"Stack\", name = \"hyqxthrwmqmaopm\", class = \"stack\")"],"blockr":["0.0.1.9000"]},"stack-2":{"class":["stack"],"payload":["list(\n  list(\n    dataset = list(\n      value = \"airquality\",\n      choices = c(\n        \"airquality\", \"anscombe\", \"attenu\", \"attitude\", \"beaver1\", \"beaver2\", \"BOD\",\n        \"cars\", \"ChickWeight\", \"chickwts\", \"CO2\", \"DNase\", \"esoph\", \"faithful\",\n        \"Formaldehyde\", \"freeny\", \"Indometh\", \"infert\", \"InsectSprays\", \"iris\",\n        \"LifeCycleSavings\", \"Loblolly\", \"longley\", \"morley\", \"mtcars\", \"npk\",\n        \"Orange\", \"OrchardSprays\", \"PlantGrowth\", \"pressure\", \"Puromycin\", \"quakes\",\n        \"randu\", \"rock\", \"sleep\", \"stackloss\", \"swiss\", \"Theoph\", \"ToothGrowth\",\n        \"trees\", \"USArrests\", \"USJudgeRatings\", \"warpbreaks\", \"women\"\n      ),\n      multiple = FALSE\n    ) |>\n      structure(\n        type = \"literal\",\n        class = c(\"select_field\", \"field\"),\n        title = \"\",\n        descr = \"\",\n        status = \"active\",\n        exclude = FALSE\n      )\n  ) |>\n    structure(\n      name = \"qnsugwfaluemlib\",\n      expr = quote(get(.(dataset), envir = as.environment(\"package:datasets\"))),\n      position = 1,\n      class = c(\"dataset_block\", \"data_block\", \"block\")\n    )\n) |>\n  structure(title = \"Stack\", name = \"rzandoxivyvevtm\", class = \"stack\")"],"blockr":["0.0.1.9000"]},"stack-3":{"class":["stack"],"payload":["list(\n  list(\n    dataset = list(\n      value = \"airquality\",\n      choices = c(\n        \"airquality\", \"anscombe\", \"attenu\", \"attitude\", \"beaver1\", \"beaver2\", \"BOD\",\n        \"cars\", \"ChickWeight\", \"chickwts\", \"CO2\", \"DNase\", \"esoph\", \"faithful\",\n        \"Formaldehyde\", \"freeny\", \"Indometh\", \"infert\", \"InsectSprays\", \"iris\",\n        \"LifeCycleSavings\", \"Loblolly\", \"longley\", \"morley\", \"mtcars\", \"npk\",\n        \"Orange\", \"OrchardSprays\", \"PlantGrowth\", \"pressure\", \"Puromycin\", \"quakes\",\n        \"randu\", \"rock\", \"sleep\", \"stackloss\", \"swiss\", \"Theoph\", \"ToothGrowth\",\n        \"trees\", \"USArrests\", \"USJudgeRatings\", \"warpbreaks\", \"women\"\n      ),\n      multiple = FALSE\n    ) |>\n      structure(\n        type = \"literal\",\n        class = c(\"select_field\", \"field\"),\n        title = \"\",\n        descr = \"\",\n        status = \"active\",\n        exclude = FALSE\n      )\n  ) |>\n    structure(\n      name = \"yumizmdtapotvsx\",\n      expr = quote(get(.(dataset), envir = as.environment(\"package:datasets\"))),\n      position = 1,\n      class = c(\"dataset_block\", \"data_block\", \"block\")\n    )\n) |>\n  structure(title = \"Stack\", name = \"puvghkiojbxyemm\", class = \"stack\")"],"blockr":["0.0.1.9000"]}},"title":["My workspace"],"settings":[]},"blockr":["0.0.1.9000"]}
