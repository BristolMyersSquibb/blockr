% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/field.R, R/field_editor.R
\name{new_field}
\alias{new_field}
\alias{validate_field}
\alias{update_field}
\alias{update_field.field}
\alias{initialize_field}
\alias{initialize_field.field}
\alias{is_field}
\alias{validate_field.string_field}
\alias{new_string_field}
\alias{string_field}
\alias{validate_field.select_field}
\alias{new_select_field}
\alias{select_field}
\alias{new_switch_field}
\alias{switch_field}
\alias{validate_field.switch_field}
\alias{new_numeric_field}
\alias{numeric_field}
\alias{validate_field.numeric_field}
\alias{value}
\alias{values}
\alias{value<-}
\alias{new_variable_field}
\alias{variable_field}
\alias{validate_field.variable_field}
\alias{new_range_field}
\alias{range_field}
\alias{validate_field.range_field}
\alias{new_hidden_field}
\alias{hidden_field}
\alias{validate_field.hidden_field}
\alias{new_list_field}
\alias{list_field}
\alias{validate_field.list_field}
\alias{new_editor_field}
\title{Fields}
\usage{
new_field(value, ..., type = c("literal", "name"), class = character())

validate_field(x)

update_field(x, new, env = list())

\method{update_field}{field}(x, new, env = list())

initialize_field(x, env = list())

\method{initialize_field}{field}(x, env = list())

is_field(x)

\method{validate_field}{string_field}(x)

new_string_field(value = character(), ...)

string_field(...)

\method{validate_field}{select_field}(x)

new_select_field(
  value = character(),
  choices = character(),
  multiple = FALSE,
  ...
)

select_field(...)

new_switch_field(value = FALSE, ...)

switch_field(...)

\method{validate_field}{switch_field}(x)

new_numeric_field(value = numeric(), min = numeric(), max = numeric(), ...)

numeric_field(...)

\method{validate_field}{numeric_field}(x)

value(x, name = "value")

values(x, name = names(x))

value(x, name = "value") <- value

new_variable_field(
  value = character(),
  field = character(),
  components = list(),
  ...
)

variable_field(...)

\method{validate_field}{variable_field}(x)

new_range_field(value = numeric(), min = numeric(), max = numeric(), ...)

range_field(...)

\method{validate_field}{range_field}(x)

new_hidden_field(value = expression(), ...)

hidden_field(...)

\method{validate_field}{hidden_field}(x)

new_list_field(value = list(), sub_fields = list(), ...)

list_field(...)

\method{validate_field}{list_field}(x)

new_editor_field(value = character(), ...)
}
\arguments{
\item{value}{Field value}

\item{...}{Further field components}

\item{type}{Field type (allowed values are \code{"literal"} and \code{"name"})}

\item{class}{Field subclass}

\item{x}{An object inheriting form \code{"field"}}

\item{new}{Value to set}

\item{env}{Environment with data and other field values}

\item{choices}{Set of permissible values}

\item{multiple}{Allow multiple selections}

\item{min, max}{Slider boundaries (inclusive)}

\item{name}{Field component name}

\item{field}{Field type}

\item{components}{Variable list of field components}

\item{sub_fields}{Fields contained in \code{list_field}}
}
\description{
Each block consists of a set of fields, which define the type of value
the field holds and can be used to customize how the UI is generated.
}
