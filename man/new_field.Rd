% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/field.R
\name{new_field}
\alias{new_field}
\alias{validate_field}
\alias{validate_field.field}
\alias{update_field}
\alias{update_field.field}
\alias{is_field}
\alias{validate_field.string_field}
\alias{new_string_field}
\alias{string_field}
\alias{validate_field.select_field}
\alias{new_select_field}
\alias{select_field}
\alias{value}
\alias{values}
\alias{value<-}
\title{Fields}
\usage{
new_field(value, ..., type = c("literal", "name"), class = character())

validate_field(x)

\method{validate_field}{field}(x)

update_field(x, new, env = list())

\method{update_field}{field}(x, new, env = list())

is_field(x)

\method{validate_field}{string_field}(x)

new_string_field(value = character(), ...)

string_field(...)

\method{validate_field}{select_field}(x)

new_select_field(value = character(), choices = character(), ...)

select_field(...)

value(x, name = "value")

values(x, name = names(x))

value(x, name = "value") <- value
}
\arguments{
\item{value}{Field value}

\item{...}{Further field components}

\item{type}{Field type (allowed values are \code{"literal"} and \code{"name"})}

\item{class}{Field subclass}

\item{x}{An object inheriting form \code{"field"}}

\item{new}{Value to set}

\item{env}{Environment with data and other field values}

\item{choices}{Set of permissible values}

\item{name}{Field component name}
}
\description{
Each block consists of a set of fields, which define the type of value
the field holds and can be used to customize how the UI is generated.
}
