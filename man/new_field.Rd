% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/field-core.R, R/keyvalue_field.R
\name{new_field}
\alias{new_field}
\alias{is_field}
\alias{new_keyvalue_field}
\alias{keyvalue_field}
\alias{validate_field.keyvalue_field}
\title{Fields}
\usage{
new_field(
  value,
  ...,
  type = c("literal", "name"),
  title = "",
  descr = "",
  status = c("active", "disabled", "invisible"),
  class = character(),
  exclude = FALSE
)

is_field(x)

new_keyvalue_field(
  value = NULL,
  multiple = TRUE,
  submit = TRUE,
  key = c("suggest", "empty", "none"),
  ...
)

keyvalue_field(...)

\method{validate_field}{keyvalue_field}(x)
}
\arguments{
\item{value}{Field value}

\item{...}{Further field components}

\item{type}{Field type (allowed values are \code{"literal"} and \code{"name"})}

\item{title}{A brief title for the field, primarily for display purposes.}

\item{descr}{A description of the field, explaining its purpose or usage.}

\item{status}{The status of the field (experimental)}

\item{class}{Field subclass}

\item{exclude}{Experimental: Exclude field from being captured in the update_fields
feature. Default to FALSE. Not yet used.}

\item{x}{An object inheriting form \code{"field"}}

\item{submit}{Should a 'submit button' be shown?}

\item{key}{How to display the 'key' field}
}
\description{
Each block consists of a set of fields, which define the type of value
the field holds and can be used to customize how the UI is generated.
}
