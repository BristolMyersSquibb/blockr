% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blocks.R
\name{new_parser_block}
\alias{new_parser_block}
\alias{new_csv_block}
\alias{csv_block}
\alias{new_rds_block}
\alias{rds_block}
\alias{new_json_block}
\alias{json_block}
\alias{new_sas_block}
\alias{sas_block}
\alias{new_xpt_block}
\alias{xpt_block}
\title{Data parser block constructor}
\usage{
new_parser_block(data, expr, fields = list(), ..., class = character())

new_csv_block(data, ...)

csv_block(data, ...)

new_rds_block(data, ...)

rds_block(data, ...)

new_json_block(data, ...)

json_block(data, ...)

new_sas_block(data, ...)

sas_block(data, ...)

new_xpt_block(data, ...)

xpt_block(data, ...)
}
\arguments{
\item{data}{Data coming from any data reader block like \link{filesbrowser_block} and
\link{upload_block}.}

\item{expr}{A quoted expression (compatible with partial substitution as
implemented in \code{\link[base:bquote]{base::bquote()}} and intended for evaluation in the context
of the fields)}

\item{fields}{A list of field, each entry inheriting from \code{"field"}}

\item{...}{Further (metadata) attributes}

\item{class}{Block subclass}
}
\description{
\code{new_parser_block}: this block allows to create any data parsing block.
Unless you need a new data parser, there is no need to use this directly.

\code{csv_block}: From a string given by \link{filesbrowser_block} and
\link{upload_block}, reads the related CSV file and returns
a dataframe.

\code{rds_block}: From a string given by \link{filesbrowser_block} and
\link{upload_block}, reads the related rds file and returns
a dataframe.

\code{json_block}: From a string given by \link{filesbrowser_block} and
\link{upload_block}, reads the related json file and returns
a dataframe.

\code{sas_block}: From a string given by \link{filesbrowser_block} and
\link{upload_block}, reads the related SAS file and returns
a dataframe.

\code{csv_block}: From a string given by \link{filesbrowser_block} and
\link{upload_block}, reads the related XPT file and returns
a dataframe.
}
