% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/field-core.R, R/fields.R
\name{update_field}
\alias{update_field}
\alias{update_field.field}
\alias{update_field_components}
\alias{update_field_components.field}
\alias{update_field_value}
\alias{update_field_value.field}
\alias{update_field_value.upload_field}
\alias{update_field_value.filesbrowser_field}
\alias{update_field_components.variable_field}
\alias{update_field_value.variable_field}
\alias{update_field_value.hidden_field}
\alias{update_field_components.list_field}
\alias{update_field_value.list_field}
\title{Update field generic}
\usage{
update_field(x, new, env = list())

\method{update_field}{field}(x, new, env = list())

\method{update_field}{field}(x, new, env = list())

update_field_components(x, env = list())

\method{update_field_components}{field}(x, env = list())

update_field_value(x, new)

\method{update_field_value}{field}(x, new)

\method{update_field_value}{upload_field}(x, new, ...)

\method{update_field_value}{filesbrowser_field}(x, new, ...)

\method{update_field_components}{variable_field}(x, env = list())

\method{update_field_value}{variable_field}(x, new)

\method{update_field_value}{hidden_field}(x, ...)

\method{update_field_components}{list_field}(x, env = list())

\method{update_field_value}{list_field}(x, new)
}
\arguments{
\item{x}{An object inheriting form \code{"field"}}

\item{new}{Value to set}

\item{env}{Environment with data and other field values}

\item{...}{Further field components}
}
\value{
The modified field.
}
\description{
Update a field with a new value.
Needed by \link{update_fields} in a block. Necessary to keep
the R object in sync with the Shiny interface state (input state).
}
