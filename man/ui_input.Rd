% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ui.R
\name{ui_input}
\alias{ui_input}
\alias{ui_input.string_field}
\alias{ui_input.select_field}
\alias{ui_input.switch_field}
\alias{ui_input.numeric_field}
\alias{ui_input.submit_field}
\alias{ui_input.upload_field}
\alias{ui_input.filesbrowser_field}
\alias{ui_input.result_field}
\alias{ui_input.variable_field}
\alias{ui_input.range_field}
\alias{ui_input.hidden_field}
\alias{ui_input.list_field}
\alias{ui_input.expression_field}
\alias{ui_input.kv_field}
\alias{ui_update}
\alias{ui_update.string_field}
\alias{ui_update.select_field}
\alias{ui_update.switch_field}
\alias{ui_update.variable_field}
\alias{ui_update.range_field}
\alias{ui_update.numeric_field}
\alias{ui_update.submit_field}
\alias{ui_update.upload_field}
\alias{ui_update.filesbrowser_field}
\alias{ui_update.hidden_field}
\alias{ui_update.list_field}
\alias{ui_update.kv_field}
\alias{input_ids}
\alias{input_ids.block}
\alias{input_ids.field}
\alias{input_ids.list_field}
\alias{input_ids.hidden_field}
\alias{input_ids.kv_field}
\title{UI input generic}
\usage{
ui_input(x, id, name)

\method{ui_input}{string_field}(x, id, name)

\method{ui_input}{select_field}(x, id, name)

\method{ui_input}{switch_field}(x, id, name)

\method{ui_input}{numeric_field}(x, id, name)

\method{ui_input}{submit_field}(x, id, name)

\method{ui_input}{upload_field}(x, id, name)

\method{ui_input}{filesbrowser_field}(x, id, name)

\method{ui_input}{result_field}(x, id, name)

\method{ui_input}{variable_field}(x, id, name)

\method{ui_input}{range_field}(x, id, name)

\method{ui_input}{hidden_field}(x, id, name)

\method{ui_input}{list_field}(x, id, name)

\method{ui_input}{expression_field}(x, id, name)

\method{ui_input}{kv_field}(x, id, name)

ui_update(x, session, id, name)

\method{ui_update}{string_field}(x, session, id, name)

\method{ui_update}{select_field}(x, session, id, name)

\method{ui_update}{switch_field}(x, session, id, name)

\method{ui_update}{variable_field}(x, session, id, name)

\method{ui_update}{range_field}(x, session, id, name)

\method{ui_update}{numeric_field}(x, session, id, name)

\method{ui_update}{submit_field}(x, session, id, name)

\method{ui_update}{upload_field}(x, session, id, name)

\method{ui_update}{filesbrowser_field}(x, session, id, name)

\method{ui_update}{hidden_field}(x, session, id, name)

\method{ui_update}{list_field}(x, session, id, name)

\method{ui_update}{kv_field}(x, session, id, name)

input_ids(x, ...)

\method{input_ids}{block}(x, ...)

\method{input_ids}{field}(x, name, ...)

\method{input_ids}{list_field}(x, name, ...)

\method{input_ids}{hidden_field}(x, name, ...)

\method{input_ids}{kv_field}(x, name, ...)
}
\arguments{
\item{x}{Object for which to generate UI components}

\item{id}{UI IDs}

\item{name}{Field name.}

\item{session}{Shiny session}

\item{...}{Generic consistency}
}
\description{
For a given field, generates the corresponding
shiny input tag. All \link{ui_update} updates
the corresponding input on the server side. \link{input_ids}
is reponsible for finding the element id.
}
