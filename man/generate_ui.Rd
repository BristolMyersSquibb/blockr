% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/keyvalue_field.R, R/server.R, R/ui.R
\name{ui_input.keyvalue_field}
\alias{ui_input.keyvalue_field}
\alias{server_output}
\alias{server_output.block}
\alias{server_output.plot_block}
\alias{server_output.html_block}
\alias{server_code}
\alias{server_code.block}
\alias{generate_ui}
\alias{ui_fields}
\alias{ui_fields.block}
\alias{block_body}
\alias{block_body.block}
\alias{block_code}
\alias{block_code.block}
\alias{block_header}
\alias{remove_button}
\alias{remove_button.block}
\alias{generate_ui.block}
\alias{generate_ui.stack}
\alias{inject_remove_button}
\alias{inject_remove_button.block}
\alias{inject_remove_button.stack}
\alias{remove_button.stack}
\alias{stack_header}
\alias{generate_ui.workspace}
\alias{ui_input}
\alias{ui_input.string_field}
\alias{ui_input.select_field}
\alias{ui_input.switch_field}
\alias{ui_input.numeric_field}
\alias{ui_input.submit_field}
\alias{ui_input.upload_field}
\alias{ui_input.filesbrowser_field}
\alias{input_ids}
\alias{input_ids.block}
\alias{input_ids.field}
\alias{input_ids.list_field}
\alias{ui_input.variable_field}
\alias{ui_input.range_field}
\alias{ui_input.hidden_field}
\alias{ui_input.list_field}
\alias{ui_update}
\alias{ui_update.string_field}
\alias{ui_update.select_field}
\alias{ui_update.switch_field}
\alias{ui_update.variable_field}
\alias{ui_update.range_field}
\alias{ui_update.numeric_field}
\alias{ui_update.submit_field}
\alias{ui_update.upload_field}
\alias{ui_update.filesbrowser_field}
\alias{ui_update.hidden_field}
\alias{ui_update.list_field}
\alias{uiOutputBlock}
\alias{uiOutputBlock.block}
\alias{uiOutputBlock.plot_block}
\alias{uiOutputBlock.html_block}
\alias{uiCode.block}
\title{UI}
\usage{
\method{ui_input}{keyvalue_field}(x, id, name)

server_output(x, result, output)

\method{server_output}{block}(x, result, output)

\method{server_output}{plot_block}(x, result, output)

\method{server_output}{html_block}(x, result, output)

server_code(x, state, output)

\method{server_code}{block}(x, state, output)

generate_ui(x, ...)

ui_fields(x, ...)

\method{ui_fields}{block}(x, ns, inputs_hidden, ...)

block_body(x, ...)

\method{block_body}{block}(x, ns, inputs_hidden, ...)

block_code(x, ...)

\method{block_code}{block}(x, ns, inputs_hidden, ...)

block_header(x, ...)

remove_button(x, ...)

\method{remove_button}{block}(x, id, ...)

\method{generate_ui}{block}(x, id, ..., .hidden = !getOption("BLOCKR_DEV", FALSE))

\method{generate_ui}{stack}(x, id = NULL, ...)

inject_remove_button(x, ...)

\method{inject_remove_button}{block}(x, ns, .hidden = !getOption("BLOCKR_DEV", FALSE), ...)

\method{inject_remove_button}{stack}(x, id, ...)

\method{remove_button}{stack}(x, id, ...)

stack_header(x, ...)

\method{generate_ui}{workspace}(x, id, ...)

ui_input(x, id, name)

\method{ui_input}{string_field}(x, id, name)

\method{ui_input}{select_field}(x, id, name)

\method{ui_input}{switch_field}(x, id, name)

\method{ui_input}{numeric_field}(x, id, name)

\method{ui_input}{submit_field}(x, id, name)

\method{ui_input}{upload_field}(x, id, name)

\method{ui_input}{filesbrowser_field}(x, id, name)

input_ids(x, ...)

\method{input_ids}{block}(x, ...)

\method{input_ids}{field}(x, name, ...)

\method{input_ids}{list_field}(x, name, ...)

\method{ui_input}{variable_field}(x, id, name)

\method{ui_input}{range_field}(x, id, name)

\method{ui_input}{hidden_field}(x, id, name)

\method{ui_input}{list_field}(x, id, name)

ui_update(x, session, id, name)

\method{ui_update}{string_field}(x, session, id, name)

\method{ui_update}{select_field}(x, session, id, name)

\method{ui_update}{switch_field}(x, session, id, name)

\method{ui_update}{variable_field}(x, session, id, name)

\method{ui_update}{range_field}(x, session, id, name)

\method{ui_update}{numeric_field}(x, session, id, name)

\method{ui_update}{submit_field}(x, session, id, name)

\method{ui_update}{upload_field}(x, session, id, name)

\method{ui_update}{filesbrowser_field}(x, session, id, name)

\method{ui_update}{hidden_field}(x, session, id, name)

\method{ui_update}{list_field}(x, session, id, name)

uiOutputBlock(x, ns)

\method{uiOutputBlock}{block}(x, ns)

\method{uiOutputBlock}{plot_block}(x, ns)

\method{uiOutputBlock}{html_block}(x, ns)

\method{uiCode}{block}(x, ns)
}
\arguments{
\item{x}{Object for which to generate UI components}

\item{id}{Parent ID}

\item{name}{Field name}

\item{result}{Block result}

\item{output}{Shiny output}

\item{state}{Block state}

\item{...}{Generic consistency}

\item{ns}{Output namespace}

\item{inputs_hidden}{For styling purposes: CSS class to apply
when the block is collapsed.}

\item{.hidden}{Whether to initialise the block with
hidden inputs.}

\item{session}{Shiny session}
}
\description{
Generic for UI generation

This has to be called from the stack parent
namespace. This can also be called dynamically when
inserting a new block within a stack.

This has to be called from the workspace parent
namespace. This can also be called dynamically when
inserting a new stack within a workspace.
}
