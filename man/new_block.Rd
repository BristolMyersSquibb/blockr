% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/block.R, R/demo-block.R, R/field.R,
%   R/mutate-block.R
\name{new_block}
\alias{new_block}
\alias{is_block}
\alias{is_initialized}
\alias{is_initialized.block}
\alias{initialize_block}
\alias{generate_code}
\alias{generate_code.block}
\alias{generate_code.transform_block}
\alias{evaluate_block}
\alias{evaluate_block.data_block}
\alias{evaluate_block.transform_block}
\alias{evaluate_block.plot_block}
\alias{evaluate_block.ggiraph_block}
\alias{new_data_block}
\alias{data_block}
\alias{initialize_block.data_block}
\alias{new_filter_block}
\alias{filter_block}
\alias{new_select_block}
\alias{new_summarize_block}
\alias{summarize_block}
\alias{select_block}
\alias{arrange_block}
\alias{group_by_block}
\alias{new_join_block}
\alias{join_block}
\alias{new_head_block}
\alias{head_block}
\alias{new_plot_block}
\alias{plot_block}
\alias{new_ggiraph_block}
\alias{ggiraph_block}
\alias{initialize_block.transform_block}
\alias{initialize_block.default}
\alias{initialize_block.plot_block}
\alias{update_fields}
\alias{update_fields.data_block}
\alias{update_fields.transform_block}
\alias{update_fields.plot_block}
\alias{update_fields.ggiraph_block}
\alias{new_cheat_block}
\alias{cheat_block}
\alias{new_asfactor_block}
\alias{asfactor_block}
\alias{demo_data_block}
\alias{demo_join_block}
\alias{demo_arrange_block}
\alias{demo_group_by_block}
\alias{demo_filter_block_1}
\alias{demo_filter_block_2}
\alias{demo_summarize_block}
\alias{is_initialized.field}
\alias{new_mutate_block}
\alias{mutate_block}
\title{Blocks}
\usage{
new_block(
  fields,
  expr,
  name = rand_names(),
  ...,
  class = character(),
  layout = default_layout_fields
)

is_block(x)

is_initialized(x)

\method{is_initialized}{block}(x)

initialize_block(x, ...)

generate_code(x)

\method{generate_code}{block}(x)

\method{generate_code}{transform_block}(x)

evaluate_block(x, ...)

\method{evaluate_block}{data_block}(x, ...)

\method{evaluate_block}{transform_block}(x, data, ...)

\method{evaluate_block}{plot_block}(x, data, ...)

\method{evaluate_block}{ggiraph_block}(x, data, ...)

new_data_block(
  ...,
  dat = as.environment("package:datasets"),
  selected = character()
)

\method{evaluate_block}{plot_block}(x, data, ...)

data_block(...)

\method{initialize_block}{data_block}(x, ...)

new_filter_block(
  data,
  columns = colnames(data)[1L],
  values = character(),
  filter_fun = "==",
  ...
)

filter_block(data, ...)

new_select_block(data, columns = colnames(data)[1], ...)

new_summarize_block(
  data,
  func = character(),
  default_columns = character(),
  ...
)

summarize_block(data, ...)

select_block(data, ...)

arrange_block(data, ...)

group_by_block(data, ...)

new_join_block(
  data,
  y = data(package = "blockr.data")$result[, "Item"],
  type = character(),
  by_col = character(),
  ...
)

join_block(data, ...)

new_head_block(data, n_rows = numeric(), n_rows_min = 1L, ...)

head_block(data, ...)

new_plot_block(
  data,
  plot_opts = list(colors = c("blue", "red"), point_size = 3, title = "Plot title", theme
    = c("theme_minimal", "theme_gray", "theme_linedraw", "theme_dark", "theme_light",
    "theme_classic", "theme_void", "theme_bw"), x_lab = "X axis label", y_lab =
    "Y axis label", errors = list(show = FALSE, ymin = character(), ymax = character()),
    lines = list(show = FALSE, group = character(), color = character())),
  ...
)

plot_block(data, ...)

new_ggiraph_block(
  data,
  plot_opts = list(colors = c("blue", "red"), point_size = 3, title = "Plot title", theme
    = c("theme_minimal", "theme_gray", "theme_linedraw", "theme_dark", "theme_light",
    "theme_classic", "theme_void", "theme_bw"), x_lab = "X axis label", y_lab =
    "Y axis label", errors = list(show = TRUE, ymin = character(), ymax = character()),
    lines = list(show = TRUE, group = character(), color = character())),
  ...
)

ggiraph_block(data, ...)

\method{initialize_block}{transform_block}(x, data, ...)

\method{initialize_block}{default}(x, data, ...)

\method{initialize_block}{plot_block}(x, data, ...)

update_fields(x, ...)

\method{update_fields}{data_block}(x, session, ...)

\method{update_fields}{transform_block}(x, session, data, ...)

\method{update_fields}{plot_block}(x, session, data, ...)

\method{update_fields}{ggiraph_block}(x, session, data, ...)

new_cheat_block(data, ...)

cheat_block(data, ...)

new_asfactor_block(data, column = "VISIT", ...)

asfactor_block(data, ...)

demo_data_block(...)

demo_join_block(data, ...)

demo_arrange_block(data, ...)

demo_group_by_block(data, ...)

demo_filter_block_1(data, ...)

demo_filter_block_2(data, ...)

demo_summarize_block(data, ...)

\method{is_initialized}{field}(x)

new_mutate_block(data, value = NULL, ...)

mutate_block(data, ...)
}
\arguments{
\item{fields}{A list of field, each entry inheriting from \code{"field"}}

\item{expr}{A quoted expression (compatible with partial substitution as
implemented in \code{\link[base:bquote]{base::bquote()}} and intended for evaluation in the context
of the fields)}

\item{name}{Block name}

\item{...}{Any other params. TO DO}

\item{class}{Block subclass}

\item{layout}{Callback function accepting one argument:
the list of fields to layout and returns one or more UI tag(s).}

\item{x}{An object inheriting form \code{"block"}}

\item{data}{Tabular data in which to select some columns.}

\item{dat}{Multiple datasets.}

\item{selected}{Selected dataset.}

\item{columns}{Column(s) to select.}

\item{values}{Definition of the equality filter.}

\item{filter_fun}{Default filter fun for the expression.}

\item{func}{Summarize function to apply.}

\item{default_columns}{If you know in advance each function to apply,
you can also pass predefined selected column for each summary.
Therefore when not of length 0, columns should have the same length
as func.}

\item{y}{Second data block.}

\item{type}{Join type.}

\item{by_col}{If you know in advance which column you want
to join}

\item{n_rows}{Number of rows to return.}

\item{n_rows_min}{Minimum number of rows.}

\item{plot_opts}{List containing options for ggplot (color, ...).}

\item{session}{Shiny session}

\item{column}{Column to apply the operation on.}

\item{value}{Intial value for muate block}
}
\description{
Blocks consist of a set of fields, an expression that defines what the block
produces (given the result of the previous block combined with user input),
plus some meta data.
}
